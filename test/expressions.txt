# Operator precedence and parenthesis -> 
(a) -> a
((a)) -> a
(((a))) -> a
a ( b ) -> a(b)
a((b)) -> a(b)
a((b,)) -> a((b,))
a((b,c)) -> a((b,c))
a( b = c , d = e ) -> a(b=c,d=e)
((a, b) for (c, d) in (e, f)) -> ((a,b)for c,d in(e,f))
(a for b in c for d in e if f) -> (a for b in c for d in e if f)
a, (b for c in d), e -> a,(b for c in d),e
[ (a, b) ] -> [(a,b)]
[ (a, b), c ] -> [(a,b),c]
[ (lambda : a), (lambda : b) ] -> [lambda:a,lambda:b]
{ (a, b) } -> {(a,b)}
{ (a, b), c } -> {(a,b),c}
{ (lambda : a), (lambda : b) } -> {lambda:a,lambda:b}
{ (a, b) : (c, d) } -> {(a,b):(c,d)}
{ (a, b) : (c, d), e : f } -> {(a,b):(c,d),e:f}
{ (lambda : a) : (lambda : b) } -> {lambda:a:lambda:b}
() -> ()
( ) -> ()
a, -> a,
1, -> 1,
(a, b, c) -> a,b,c
1, 2 -> 1,2
(a, b, lambda c: d, e) -> a,b,lambda c:d,e
lambda a: 1, 2, 3 -> lambda a:1,2,3
lambda a : (b or c) -> lambda a:b or c
lambda a, b: (1, 2, 3) -> lambda a,b:(1,2,3)
(lambda a: (lambda b: (lambda c: (d)))) -> lambda a:lambda b:lambda c:d
a if b else c -> a if b else c
a if b else (c if d else e) -> a if b else c if d else e
(a if b else c) if d else e -> (a if b else c)if d else e
a if b else c if d else e -> a if b else c if d else e
0 if 0 else 0 -> 0if 0 else 0
1 if 1 else 1 -> 1if 1 else 1
v0 if v0 else v0 -> v0 if v0 else v0
v1 if v1 else v1 -> v1 if v1 else v1
a or (b and c) -> a or b and c
(not a) and b -> not a and b
not (a in b) -> not a in b
a in (not b) -> a in(not b)
not (a not in b) -> not a not in b
a is (b is c) -> a is(b is c)
(a is b) is c -> (a is b)is c
0 or (0 and 1) -> 0 or 0and 1
1 or (0 and 1) -> 1or 0and 1
(not 0) and 0 -> not 0and 0
not (0 in 0) -> not 0in 0
0 in (not 0) -> 0in(not 0)
not (0 not in 0) -> not 0not in 0
0 is (0 is 1) -> 0is(0is 1)
(0 is 0) is 1 -> (0is 0)is 1
v0 or (v0 and v1) -> v0 or v0 and v1
v1 or (v0 and v1) -> v1 or v0 and v1
(not v0) and v0 -> not v0 and v0
not (v0 in v0) -> not v0 in v0
v0 in (not v0) -> v0 in(not v0)
not (v0 not in v0) -> not v0 not in v0
v0 is (v0 is v1) -> v0 is(v0 is v1)
(v0 is v0) is v1 -> (v0 is v0)is v1
a == b == c -> a==b==c
(a == b) != c -> (a==b)!=c
(a != b) <= c -> (a!=b)<=c
(a < b >= c) -> a<b>=c
a >= (b > c) -> a>=(b>c)
(a == b) | c -> (a==b)|c
a == b | c -> a==b|c
(a) == (b | c) -> a==b|c
(a | b) | c -> a|b|c
a | (b | c) -> a|(b|c)
(a ^ b) | c -> a^b|c
a ^ (b | c) -> a^(b|c)
a ^ b | c -> a^b|c
(a ^ b) ^ c -> a^b^c
a ^ (b ^ c) -> a^(b^c)
(a & b) ^ c -> a&b^c
a & (b ^ c) -> a&(b^c)
a & b ^ c -> a&b^c
(a & b) & c -> a&b&c
a & (b & c) -> a&(b&c)
(a << b) & c -> a<<b&c
a << (b & c) -> a<<(b&c)
a << b & c -> a<<b&c
(a << b) << c -> a<<b<<c
(a << (b << c)) -> a<<(b<<c)
(a >> b) << c -> a>>b<<c
a >> (b << c) -> a>>(b<<c)
a >> b << c -> a>>b<<c
(a >> b) >> c -> a>>b>>c
a >> (b >> c) -> a>>(b>>c)
(a << b) >> c -> a<<b>>c
((a + b)) >> c -> a+b>>c
a + (b >> c) -> a+(b>>c)
a + b >> c -> a+b>>c
(a + b) + c -> a+b+c
a + (b + c) -> a+(b+c)
(a + b) << c -> a+b<<c
a + (b << c) -> a+(b<<c)
a + b << c -> a+b<<c
(a - b) + c -> a-b+c
a - (b + c) -> a-(b+c)
a - b + c -> a-b+c
(a - b) - c -> a-b-c
a - (b - c) -> a-(b-c)
(a * b) + c -> a*b+c
a * (b + (c)) -> a*(b+c)
a * b + c -> a*b+c
(a * b) * c -> a*b*c
a * (b * c) -> a*(b*c)
((a) * b) - c -> a*b-c
a * (b - c) -> a*(b-c)
a * b - c -> a*b-c
(a / b) * c -> a/b*c
a / ((b) * c) -> a/(b*c)
a / b * c -> a/b*c
(a / b) / c -> a/b/c
a / (b / c) -> a/(b/c)
(a // b) * c -> a//b*c
a // (b * c) -> a//(b*c)
a // b * c -> a//b*c
(a // b) // c -> a//b//c
a // (b // c) -> a//(b//c)
(a % b) * c -> a%b*c
a % (b * c) -> a%(b*c)
a % b * c -> a%b*c
(a % b) % c -> a%b%c
a % ((b) % c) -> a%(b%c)
a * + b -> a*+b
a * (+b) -> a*+b
a * - b -> a*-b
a * (-b) -> a*-b
a * ~ b -> a*~b
a * (~b) -> a*~b
a / + b -> a/+b
a / (+b) -> a/+b
a / - b -> a/-b
a / (-b) -> a/-b
a / ~ b -> a/~b
a / (~b) -> a/~b
a ++ (b) -> a++b
a + (+ b) -> a++b
+(+(+(+(a)))) -> ++++a
~(-(+(-(a)))) -> ~-+-a
#~(-(+(-1))) -> ~-+-1
+ ~ - + ~ - + a -> +~-+~-+a
(-a) ** b -> (-a)**b
- (a ** b) -> -a**b
- a ** b -> -a**b
(a ** b) . c -> (a**b).c
a ** (b . c) -> a**b.c
a ** b . c -> a**b.c
(- a) ** b . c -> (-a)**b.c
(a . b) ** (c . d) -> a.b**c.d
#(- 1) ** 2 -> (-1)**2
#(-1) ** 2 -> (-1)**2
- (1 ** 2) -> -1**2
- 1 ** 2 -> -1**2
-1 ** 2 -> -1**2
(1 ** 2) . c -> (1**2).c
#1 ** (2 . c) -> 1**(2).c
#1 ** (2 . c . d) -> 1**(2).c.d
#(- 1) ** 2 . c -> (-1)**(2).c
(1 . b) ** (3 . d) -> (1).b**(3).d
#- -1 -> --1
#- (-1) -> --1
(- 1j) ** 2j -> (-1j)**2j
(-1j) ** 2j -> (-1j)**2j
- (1j ** 2j) -> -1j**2j
- 1j ** 2j -> -1j**2j
-1j ** 2j -> -1j**2j
- -1j -> --1j
- (-1j) -> --1j
#(- 1-3j) ** 2+4j -> (-1-3j)**2+4j
#(-1-3j) ** 2+4j -> (-1-3j)**2+4j
#- (1-3j ** 2+4j) -> -(1-3j**2+4j)
#-1-3j ** 2+4j -> -1-3j**2+4j
#- -1-3j -> --1-3j
#- (-1-3j) -> -(-1-3j)
'' '' -> ''
'\x80\x90' -> '\x80\x90'
'\\' -> '\\'
'\\a' -> r'\a'
'\a' -> '\a'
"abc" -> 'abc'
"\"" -> '"'
"\'" -> "'"
'\\\\\\' -> '\\\\\\'
'\\\\\a' -> '\\\\\a'
'\\\\\'' -> r"\\'"
r'' -> ''
'\0' -> '\0'
'\x00' -> '\0'
'\x00\x00\xfe\xff' -> '\0\0\xfe\xff'
'\a\b\n\r\t\v' -> '\a\b\n\r\t\v'
'\x7f\a\b\n\r\t\v' -> '\x7f\a\b\n\r\t\v'
#u'\x7f\a\b\n\r\t\v' -> u'\a\b\n\r\t\v'
'\x000' -> '\x000'
'\x009' -> '\x009'
'\x00a' -> '\0a'
'\x00\x01\x02\x03' -> '\0\01\02\03'
#u'\x000' -> u'\x000'
#u'\x009' -> u'\x009'
#u'\x00a' -> u'\0a'
#u'\x00\x01\x02\x03' -> u'\0\01\02\03'
#u'\\u' -> u'\\u'
#u'\u1234' -> u'\u1234'
#u'\\u1234' -> u'\\u1234'
#u'\\\u1234' -> u'\\\u1234'
#u'\\\\u1234' -> u'\\\\u1234'
#u'\\U' -> u'\\U'
#u'\U0010ffff' -> u'\udbff\udfff'
#u'\\U0010ffff' -> u'\\U0010ffff'
#u'\\\U0010ffff' -> u'\\\udbff\udfff'
#u'\\\\U0010ffff' -> u'\\\\U0010ffff'
"""\"""" -> '"'
"""""'''""'''""'''""'""" -> """""'''""'''""'''""'"""
"""""'''""'''""'''""'\"""" -> """""'''""'''""'''""'\""""
1e500 -> 1e400
#-1e600 -> -1e400
#(-1e700)**2 -> (-1e400)**2
(a, b)() -> (a,b)()
(a or b)() -> (a or b)()
(a + b)() -> (a+b)()
(a * b)(c - d)() -> (a*b)(c-d)()
(a.b)() -> a.b()
#-(1) -> -(1)
